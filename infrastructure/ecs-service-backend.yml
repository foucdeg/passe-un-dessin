Description: PasseUnDessin Api - ECS Service

Parameters:
  DesiredCount:
    Type: Number
    Default: 1

  MaxCount:
    Type: Number
    Default: 50

  ECSCluster:
    Type: String

  Tag:
    Type: String

  Env:
    Type: String

  ECSTaskRole:
    Type: String

  ECSAutoScaleRole:
    Type: String

  DockerRepository:
    Type: String

  CloudwatchLogsGroup:
    Type: String

  TargetGroup:
    Type: String

  DatabaseUrl:
    Type: String
    NoEcho: True

  Secret:
    Type: String
    NoEcho: True

  ServiceDiscoveryNamespace:
    Type: String

  PushpinHost:
    Type: String
    Default: passeundessin-pushpindiscoveryservice-production.private.passeundessin.fouc.net

Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      NetworkMode: bridge
      Family: !Sub PasseUnDessinBackend-TaskFamily-${Env}
      TaskRoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${ECSTaskRole}
      ContainerDefinitions:
        - Name: !Sub PasseUnDessinBackendContainer-${Env}
          Image: !Sub ${DockerRepository}:${Tag}
          Essential: true
          MemoryReservation: 300
          Cpu: 333
          PortMappings:
            - ContainerPort: 80
              HostPort: 0
              Protocol: tcp
          Environment:
            - Name: ENVIRONMENT
              Value: !Ref Env
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            - Name: ALLOWED_HOST
              Value: "*"
            - Name: SECRET_KEY
              Value: !Ref Secret
            - Name: DATABASE_URL
              Value: !Ref DatabaseUrl
            - Name: PUSHPIN_HOST
              Value: !Ref PushpinHost
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudwatchLogsGroup
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: passe-un-dessin-api

  DiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Description: Discovery Service for Passe un Dessin Backend
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: SRV
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: !Sub PasseUnDessin-BackendDiscoveryService-${Env}
      NamespaceId: !Ref ServiceDiscoveryNamespace

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      ServiceName: !Sub PasseUnDessinBackend-Service-${Env}
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      LoadBalancers:
        - ContainerName: !Sub PasseUnDessinBackendContainer-${Env}
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup
      ServiceRegistries:
        - ContainerName: !Sub PasseUnDessinBackendContainer-${Env}
          ContainerPort: 80
          RegistryArn: !GetAtt DiscoveryService.Arn

  scalingPolicyUp:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ScalingPolicyUp-${Env}
      PolicyType: StepScaling
      ScalingTargetId: !Ref scalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 30
        MetricAggregationType: Average
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            ScalingAdjustment: 1

  scalingPolicyDown:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ScalingPolicyDown-${Env}
      PolicyType: StepScaling
      ScalingTargetId: !Ref scalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 30
        MetricAggregationType: Average
        StepAdjustments:
          - MetricIntervalUpperBound: 0
            ScalingAdjustment: -1

  scalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: !Ref MaxCount
      MinCapacity: !Ref DesiredCount
      ResourceId:
        !Join ["/", ["service", !Ref ECSCluster, !GetAtt ECSService.Name]]
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/${ECSAutoScaleRole}
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  ServiceMemoryAlarmScaleUp:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 3
      Statistic: Average
      AlarmName: !Sub PasseUnDessinBackendServicescalingMemoryscaleUpAlarm-${Env}
      Threshold: 50
      AlarmDescription: Alarm if Memory is too high
      Period: 60
      AlarmActions:
        - !Ref scalingPolicyUp
      Namespace: AWS/ECS
      Dimensions:
        - Name: ClusterName
          Value: !Ref ECSCluster
      ComparisonOperator: GreaterThanThreshold
      MetricName: MemoryUtilization

  ServiceMemoryAlarmScaleDown:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 4
      Statistic: Average
      AlarmName: !Sub PasseUnDessinBackendServicescalingMemoryscaleDownAlarm-${Env}
      Threshold: 10
      AlarmDescription: Alarm if Memory is too low
      Period: 60
      AlarmActions:
        - !Ref scalingPolicyDown
      Namespace: AWS/ECS
      Dimensions:
        - Name: ClusterName
          Value: !Ref ECSCluster
      ComparisonOperator: LessThanThreshold
      MetricName: MemoryUtilization

Outputs:
  ServiceName:
    Value: !GetAtt ECSService.Name
  FamilyName:
    Value: !Sub PasseUnDessinBackend-TaskFamily-${Env}
