Description: PasseUnDessin Api - ECS Services

Parameters:
  DesiredCount:
    Type: Number
    Default: 1

  MaxCount:
    Type: Number
    Default: 50

  ECSCluster:
    Type: String

  Tag:
    Type: String

  Env:
    Type: String

  ECSTaskRole:
    Type: String

  ECSAutoScaleRole:
    Type: String

  DockerRepository:
    Type: String

  ECSServiceRole:
    Type: String

  CloudwatchLogsGroup:
    Type: String

  TargetGroup:
    Type: String

  DatabaseUrl:
    Type: String
    NoEcho: True

  Secret:
    Type: String
    NoEcho: True

Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      NetworkMode: bridge
      Family: !Sub PasseUnDessinApi-TaskFamily-${Env}
      TaskRoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${ECSTaskRole}
      ContainerDefinitions:
        - Name: !Sub PasseUnDessinApiContainer-${Env}
          Image: !Sub ${DockerRepository}:${Tag}
          Essential: true
          MemoryReservation: 512
          Cpu: 256
          PortMappings:
            - ContainerPort: 80
              HostPort: 0
              Protocol: tcp
          Environment:
            - Name: ENVIRONMENT
              Value: !Ref Env
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            - Name: ALLOWED_HOST
              Value: '*'
            - Name: SECRET_KEY
              Value: !Ref Secret
            - Name: DATABASE_URL
              Value: !Ref DatabaseUrl
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudwatchLogsGroup
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: passe-un-dessin-apiAssiociatePublicIp

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      ServiceName: !Sub PasseUnDessinApi-Service-${Env}
      Role: !Ref ECSServiceRole
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      LoadBalancers:
        - ContainerName: !Sub PasseUnDessinApiContainer-${Env}
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup

  scalingPolicyUp:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ScalingPolicyUp-${Env}
      PolicyType: StepScaling
      ScalingTargetId: !Ref scalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 30
        MetricAggregationType: Average
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            ScalingAdjustment: 2

  scalingPolicyDown:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub ScalingPolicyDown-${Env}
      PolicyType: StepScaling
      ScalingTargetId: !Ref scalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 30
        MetricAggregationType: Average
        StepAdjustments:
          - MetricIntervalUpperBound: 0
            ScalingAdjustment: -1

  scalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: !Ref MaxCount
      MinCapacity: !Ref DesiredCount
      ResourceId:
        !Join ["/", ["service", !Ref ECSCluster, !GetAtt ECSService.Name]]
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/${ECSAutoScaleRole}
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  ServiceCPUAlarmScaleUp:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 3
      Statistic: Average
      AlarmName: !Sub PasseUnDessinApiServicescalingCPUscaleUpAlarm-${Env}
      Threshold: 50
      AlarmDescription: Alarm if CPU is too high
      Period: 60
      AlarmActions:
        - !Ref scalingPolicyUp
      Namespace: AWS/ECS
      Dimensions:
        - Name: ClusterName
          Value: !Ref ECSCluster
      ComparisonOperator: GreaterThanThreshold
      MetricName: CPUUtilization

  ServiceCPUAlarmScaleDown:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 4
      Statistic: Average
      AlarmName: !Sub PasseUnDessinApiServicescalingCPUscaleDownAlarm-${Env}
      Threshold: 10
      AlarmDescription: Alarm if CPU is too low
      Period: 60
      AlarmActions:
        - !Ref scalingPolicyDown
      Namespace: AWS/ECS
      Dimensions:
        - Name: ClusterName
          Value: !Ref ECSCluster
      ComparisonOperator: LessThanThreshold
      MetricName: CPUUtilization

Outputs:
  ServiceName:
    Value: !GetAtt ECSService.Name
  FamilyName:
    Value: !Sub PasseUnDessinApi-TaskFamily-${Env}
