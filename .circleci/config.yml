version: 2.1
orbs:
  node: circleci/node@4.7.0
  python: circleci/python@1.4.0
jobs:
  lint-front:
    executor:
      name: node/default
      tag: "14.15"
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          app-dir: frontend
      - run:
          name: Run linter
          command: yarn lint
          working_directory: frontend
      - run:
          name: Run TypeScript check
          command: yarn tsc
          working_directory: frontend
      - run:
          name: Run stylelint check
          command: yarn stylelint
          working_directory: frontend

  build-front:
    executor:
      name: node/default
      tag: "14.15"
    environment:
      REACT_APP_ENV: production
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          app-dir: frontend
      - run:
          name: Build app
          command: yarn build
          working_directory: frontend
      - store_artifacts:
          path: frontend/build

  build-deploy-front:
    executor:
      name: node/default
      tag: "14.15"
    environment:
      REACT_APP_ENV: production
      SENTRY_ORG: passe-un-dessin
      SENTRY_PROJECT: frontend
      SENTRY_NO_PROGRESS_BAR: 1
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          app-dir: frontend
      - run:
          name: Install sentry-cli
          command: curl -sL https://sentry.io/get-cli/ | bash
      - run:
          name: Create a release with sentry-cli
          command: |
            export SENTRY_RELEASE=$(sentry-cli releases propose-version)
            echo $SENTRY_RELEASE > frontend/.sentry-release
            sentry-cli releases new $SENTRY_RELEASE
            sentry-cli releases set-commits --auto $SENTRY_RELEASE
      - run:
          name: Build app
          command: REACT_APP_SENTRY_RELEASE=$(cat .sentry-release) yarn build
          working_directory: frontend
      - run:
          name: Upload sourcemaps to Sentry and finalize release
          command: |
            export SENTRY_RELEASE=$(cat .sentry-release)
            sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps --url-prefix "~/static/js" --validate build/static/js
            sentry-cli releases finalize $SENTRY_RELEASE
          working_directory: frontend
      - run:
          name: Deploy to release
          command: |
            export SENTRY_RELEASE=$(cat .sentry-release)
            scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r ./build/ deploy@vps388600.ovh.net:/home/fouc/passe-un-dessin/releases/$SENTRY_RELEASE
          working_directory: frontend
      - store_artifacts:
          path: frontend/build

  lint-back:
    docker:
      - image: circleci/python:3.9.4
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
          app-dir: backend
      - run:
          command: poetry run flake8 ./
          working_directory: backend
          name: Run linter

  build-back:
    docker:
      - image: cimg/base:2021.07
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build backend app
          command: docker build -f ./docker/Dockerfile.prod . -t foucdeg/passe-un-dessin:$CIRCLE_SHA1
          working_directory: backend

  build-deploy-back:
    docker:
      - image: cimg/base:2021.07
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build backend app
          command: docker build -f ./docker/Dockerfile.prod . -t foucdeg/passe-un-dessin:latest
          working_directory: backend
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASSWORD" | docker login --username foucdeg --password-stdin
      - run:
          name: Push backend docker image
          command: docker push foucdeg/passe-un-dessin:latest

  build-drawing-renderer:
    docker:
      - image: cimg/base:2021.07
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build drawing renderer
          command: docker build -f ./Dockerfile.prod . -t foucdeg/passe-un-dessin-drawing-renderer:$CIRCLE_SHA1
          working_directory: drawing-renderer

  build-deploy-drawing-renderer:
    docker:
      - image: cimg/base:2021.07
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build drawing renderer
          command: docker build -f ./Dockerfile.prod . -t foucdeg/passe-un-dessin-drawing-renderer:latest
          working_directory: drawing-renderer
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASSWORD" | docker login --username foucdeg --password-stdin
      - run:
          name: Push drawing-renderer Docker image
          command: docker push foucdeg/passe-un-dessin-drawing-renderer:latest

  build-pushpin:
    docker:
      - image: cimg/base:2021.07
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build pushpin
          command: docker build -f ./Dockerfile.prod . -t foucdeg/passe-un-dessin-pushpin:$CIRCLE_SHA1
          working_directory: pushpin

  build-deploy-pushpin:
    docker:
      - image: cimg/base:2021.07
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build pushpin
          command: docker build -f ./Dockerfile.prod . -t foucdeg/passe-un-dessin-pushpin:latest
          working_directory: pushpin
      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASSWORD" | docker login --username foucdeg --password-stdin
      - run:
          name: Push pushpin Docker image
          command: docker push foucdeg/passe-un-dessin-pushpin:latest


workflows:
  feature-branch:
    unless:
      equal: ["master", << pipeline.git.branch >>]
    jobs:
      - lint-front
      - build-front
      - lint-back
      - build-back
      - build-drawing-renderer
      - build-pushpin
  master:
    when:
      equal: ["master", << pipeline.git.branch >>]
    jobs:
      - lint-front
      - lint-back
      - build-deploy-front:
          requires:
            - lint-front
            - lint-back
      - build-deploy-back:
          requires:
            - lint-front
            - lint-back
      - build-deploy-drawing-renderer
      - build-deploy-pushpin
